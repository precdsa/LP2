// Java code to Implement DES Algorithm
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.KeyGenerator;
import javax.crypto.spec.SecretKeySpec;
import java.nio.charset.StandardCharsets;
import java.security.NoSuchAlgorithmException;
public class DES {
 public static void main(String[] args) {
 try {
 // Generate a DES key
 SecretKey key = generateDESKey();
 // Create a DES cipher object
 Cipher cipher = Cipher.getInstance("DES/ECB/PKCS5Padding");
 cipher.init(Cipher.ENCRYPT_MODE, key);
 String plaintext = "Hello, Assim!";
 byte[] encryptedBytes = cipher.doFinal(plaintext.getBytes(StandardCharsets.UTF_8));
 System.out.println("Plaintext: " + plaintext);
 System.out.println("Encrypted: " + bytesToHex(encryptedBytes));
 // Decrypt the encrypted message
 cipher.init(Cipher.DECRYPT_MODE, key);
 byte[] decryptedBytes = cipher.doFinal(encryptedBytes);
 String decryptedText = new String(decryptedBytes, StandardCharsets.UTF_8).trim();
 System.out.println("Decrypted: " + decryptedText);
 } catch (Exception e) {
 e.printStackTrace();
 }
 }
 private static SecretKey generateDESKey() throws NoSuchAlgorithmException {
 KeyGenerator keyGenerator = KeyGenerator.getInstance("DES");
 return keyGenerator.generateKey();
 }
 private static String bytesToHex(byte[] bytes) {
 StringBuilder result = new StringBuilder();
 for (byte b : bytes) {
 result.append(String.format("%02X", b));
 }
 return result.toString();
 }
}